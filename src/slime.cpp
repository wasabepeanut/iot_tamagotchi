// Animation state
bool slimeToggle = false;
unsigned long lastSlimeSwitch = 0;
bool slimeNeedsRedraw = true;

#include "slime.h"
#include "monitor.h"
#include "stats.h"
#include "pet.h"

// Slime animation Up
const uint64_t slimeBody[60] = {
  0b0000000000000000000000000111111111100000000000000000000000000,
  0b0000000000000000000000000111111111100000000000000000000000000,
  0b0000000000000000000000000111111111100000000000000000000000000,
  0b0000000000000000000000000111111111100000000000000000000000000,
  0b0000000000000000000000000111111111100000000000000000000000000,
  0b0000000000000000000011111000000000011111000000000000000000000,
  0b0000000000000000000011111000000000011111000000000000000000000,
  0b0000000000000000000011111000000000011111000000000000000000000,
  0b0000000000000000000011111000000000011111000000000000000000000,
  0b0000000000000000000011111000000000011111000000000000000000000,
  0b0000000000000001111100000000000000000000111110000000000000000,
  0b0000000000000001111100000000000000000000111110000000000000000,
  0b0000000000000001111100000000000000000000111110000000000000000,
  0b0000000000000001111100000000000000000000111110000000000000000,
  0b0000000000000001111100000000000000000000111110000000000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b1111100000000000000000000000000000000000000000000000000111110,
  0b1111100000000000000000000000000000000000000000000000000111110,
  0b1111100000000001111000000000000000000000011110000000000111110,
  0b1111100000000001111000000000000000000000011110000000000111110,
  0b1111100000000001111000000000000000000000011110000000000111110,
  0b1111100000000001111000000000000000000000011110000000000111110,
  0b1111100000000000000011111111111111111111000000000000000111110,
  0b1111100000000000000011111111111111111111000000000000000111110,
  0b1111100000000000000011111111111111111111000000000000000111110,
  0b1111100000000000000011111111111111111111000000000000000111110,
  0b1111100000000000000000000000000000000000000000000000000111110,
  0b1111100000000000000000000000000000000000000000000000000111110,
  0b1111100000000000000000000000000000000000000000000000000111110,
  0b1111100000000000000000000000000000000000000000000000000111110,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000011111000000000000000000000000000000000000000011111000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000111110000000000000000000000000000001111100000000000,
  0b0000000000000001111111111111111111111111111110000000000000000,
  0b0000000000000001111111111111111111111111111110000000000000000,
  0b0000000000000001111111111111111111111111111110000000000000000,
  0b0000000000000001111111111111111111111111111110000000000000000,
  0b0000000000000001111111111111111111111111111110000000000000000,
  0b0000000000000000000000000000000000000000000000000000000000000,
  0b0000000000000000000000000000000000000000000000000000000000000,
  0b0000000000000000000000000000000000000000000000000000000000000,
  0b0000000000000000000000000000000000000000000000000000000000000,
  0b0000000000000000000000000000000000000000000000000000000000000
};

// Slime animation Down
const uint64_t slimeBody2[60] = {
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000000000000000000000000000000000000000,
    0b0000000000000000000000000111111111100000000000000000000000000,
    0b0000000000000000000000000111111111100000000000000000000000000,
    0b0000000000000000000000000111111111100000000000000000000000000,
    0b0000000000000000000000000111111111100000000000000000000000000,
    0b0000000000000000000000000111111111100000000000000000000000000,
    0b0000000000000000000011111000000000011111000000000000000000000,
    0b0000000000000000000011111000000000011111000000000000000000000,
    0b0000000000000000000011111000000000011111000000000000000000000,
    0b0000000000000000000011111000000000011111000000000000000000000,
    0b0000000000000000000011111000000000011111000000000000000000000,
    0b0000000000000001111100000000000000000000111110000000000000000,
    0b0000000000000001111100000000000000000000111110000000000000000,
    0b0000000000000001111100000000000000000000111110000000000000000,
    0b0000000000000001111100000000000000000000111110000000000000000,
    0b0000000000000001111100000000000000000000111110000000000000000,
    0b0000000000111110000000000000000000000000000001111100000000000,
    0b0000000000111110000000000000000000000000000001111100000000000,
    0b0000000000111110000000000000000000000000000001111100000000000,
    0b0000000000111110000000000000000000000000000001111100000000000,
    0b0000000000111110000000000000000000000000000001111100000000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b1111100000000001111000000000000000000000011110000000000111110,
    0b1111100000000001111000000000000000000000011110000000000111110,
    0b1111100000000001111000000000000000000000011110000000000111110,
    0b1111100000000001111000000000000000000000011110000000000111110,
    0b1111100000000000000011111111111111111111000000000000000111110,
    0b1111100000000000000011111111111111111111000000000000000111110,
    0b1111100000000000000011111111111111111111000000000000000111110,
    0b1111100000000000000011111111111111111111000000000000000111110,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b1111100000000000000000000000000000000000000000000000000111110,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000011111000000000000000000000000000000000000000011111000000,
    0b0000000000111111111111111111111111111111111111111100000000000,
    0b0000000000111111111111111111111111111111111111111100000000000,
    0b0000000000111111111111111111111111111111111111111100000000000,
    0b0000000000111111111111111111111111111111111111111100000000000,
    0b0000000000111111111111111111111111111111111111111100000000000
};


// --- Helper: Draw single pixel ---
static inline void drawBlock(int x, int y, uint16_t color) {
    tft.drawPixel(x, y, color);
}

// --- Draw slime pixel art centered ---
void slimeDraw(uint16_t color) {
    static bool lastToggle = false;
    int startX = (SCREEN_WIDTH - SLIME_WIDTH) / 2;
    int startY = (SCREEN_HEIGHT - SLIME_HEIGHT) / 2 + SLIME_OFFSET_Y;

    // Draw speech bubble/message above the sprite if set, else clear the area
    extern char slimeMessage[16];
    int msgY = startY - 16;
    int textSize = 1;
    int charWidth = 6 * textSize; // Adafruit_GFX default font width per char
    int maxMsgLen = 15; // slimeMessage[16] max 15 chars + null
    int maxPixelWidth = maxMsgLen * charWidth;
    int msgLen = strlen(slimeMessage);
    int msgPixelWidth = msgLen * charWidth;
    int msgX = startX + (SLIME_WIDTH - msgPixelWidth) / 2;
    if (slimeMessage[0]) {
        tft.setTextColor(ST77XX_WHITE, ST77XX_BLACK);
        tft.setTextSize(textSize);
        tft.setCursor(msgX, msgY);
        tft.print(slimeMessage);
    } else {
        // Clear the entire possible message area (centered for max width)
        int clearX = startX + (SLIME_WIDTH - maxPixelWidth) / 2;
        tft.fillRect(clearX, msgY, maxPixelWidth, 10, ST77XX_BLACK);
    }

    // Only clear and redraw if frame changed
    if (slimeToggle != lastToggle) {
        tft.fillRect(startX, startY, SLIME_WIDTH, SLIME_HEIGHT, ST77XX_BLACK);
        lastToggle = slimeToggle;
    }

    // Choose which body to draw
    const uint64_t* body = slimeToggle ? slimeBody2 : slimeBody;
    for (int y = 0; y < SLIME_HEIGHT; y++) {
        for (int x = 0; x < SLIME_WIDTH; x++) {
            if (body[y] & (1ULL << (SLIME_WIDTH - 1 - x))) {
                drawBlock(startX + x, startY + y, color);
            }
        }
    }
}

// Call this in your main loop to update animation state
// Need to access myPet stats


void slimeAnimate() {
    // Use stat average for animation speed
    float statAvg = getPetStatAverage();
    unsigned long interval;
    if (statAvg > 66.6) {
        interval = 500; // fast
    } else if (statAvg > 33.3) {
        interval = 800; // medium
    } else {
        interval = 1600; // slow
    }
    unsigned long now = millis();
    if (now - lastSlimeSwitch >= interval) {
        slimeToggle = !slimeToggle;
        lastSlimeSwitch = now;
    }
}